{"version":3,"sources":["webpack:///./src/components/Contact/Contact.js","webpack:///./src/pages/contact.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/components/Article/Article.js","webpack:///./src/components/Article/index.js"],"names":["Contact","Form","Item","Input","TextArea","props","form","getFieldDecorator","react_default","a","createElement","Fragment","layouts","Consumer","theme","className","style_default","dynamic","color","brand","primary","href","fa","size","styleId","css","propTypes","PropTypes","object","ContactForm","create","__webpack_require__","d","__webpack_exports__","query","ContactPage","facebook","data","site","siteMetadata","Article","Headline","title","components_Contact_Contact","Seo","isRequired","postTitle","frontmatter","postDescription","description","postCover","cover","postSlug","fields","slug","config","shortSiteTitle","siteTitle","siteDescription","image","siteImage","url","siteUrl","pathPrefix","Helmet_default","htmlAttributes","lang","siteLanguage","prefix","name","content","property","appId","authorTwitterAccount","components_Seo_Seo","children","react__WEBPACK_IMPORTED_MODULE_1___default","styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default","font","xxl","space","stack","l","time","duration","long","weight","standard","xs","xl","string","node","inset","default","text","maxWidth","tablet","desktop","components_Article_Article"],"mappings":"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","file":"component---src-pages-contact-js-f9dddc011a16cdd87448.js","sourcesContent":["/* eslint no-unused-vars: 0 */\n\nimport { navigate } from \"gatsby\";\n// import Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport { FaEnvelope } from \"react-icons/fa/\";\nimport { FaGithub } from \"react-icons/fa/\";\nimport { FaLinkedin } from \"react-icons/fa/\";\nimport \"antd/lib/form/style/index.css\";\nimport \"antd/lib/input/style/index.css\";\nimport \"antd/lib/button/style/index.css\";\nimport { ThemeContext } from \"../../layouts\";\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\nconst Contact = props => {\n  const { getFieldDecorator } = props.form;\n\n  function encode(data) {\n    return Object.keys(data)\n      .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n      .join(\"&\");\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        sendMessage(values);\n      }\n    });\n  }\n\n  function sendMessage(values) {\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: encode({ \"form-name\": \"contact\", ...values })\n    })\n      .then(() => {\n        console.log(\"Form submission success\");\n        navigate(\"/success\");\n      })\n      .catch(error => {\n        console.error(\"Form submission error:\", error);\n        this.handleNetworkError();\n      });\n  }\n\n  function handleNetworkError(e) {\n    console.log(\"submit Error\");\n  }\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <div className=\"form\">\n            {\n              <React.Fragment>\n                <a href=\"mailto:shayok321@gmail.com\"><FaEnvelope size={80} /></a>\n                <a href=\"https://github.com/shayokneogi\"><FaGithub size={80} /></a>\n                <a href=\"https://www.linkedin.com/in/shayok-neogi-94bb1a13b/\"><FaLinkedin size={80} /></a>\n              </React.Fragment>\n              /* <Form\n              name=\"contact\"\n              onSubmit={handleSubmit}\n              data-netlify=\"true\"\n              data-netlify-honeypot=\"bot-field\"\n            >\n              <FormItem label=\"Name\">\n                {getFieldDecorator(\"name\", {\n                  rules: [\n                    {\n                      whitespace: true\n                    }\n                  ]\n                })(<Input name=\"name\" />)}\n              </FormItem>\n              <FormItem label=\"E-mail\">\n                {getFieldDecorator(\"email\", {\n                  rules: [\n                    {\n                      required: true,\n                      message: \"Please input your e-mail address!\",\n                      whitespace: true,\n                      type: \"email\"\n                    }\n                  ]\n                })(<Input name=\"email\" />)}\n              </FormItem>\n              <FormItem label=\"Message\">\n                {getFieldDecorator(\"message\", {\n                  rules: [\n                    { required: true, message: \"Please input your message!\", whitespace: true }\n                  ]\n                })(\n                  <TextArea name=\"message\" placeholder=\"\" autosize={{ minRows: 4, maxRows: 10 }} />\n                )}\n              </FormItem>\n              <FormItem>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Submit\n                </Button>\n              </FormItem>\n            </Form> */}\n\n            {/* --- STYLES --- */}\n            <style jsx>{`\n              .form {\n                background: transparent;\n              }\n              .form :global(.ant-row.ant-form-item) {\n                margin: 0 0 1em;\n              }\n              .form :global(.ant-row.ant-form-item:last-child) {\n                margin-top: 1em;\n              }\n              .form :global(.ant-form-item-control) {\n                line-height: 1em;\n              }\n              .form :global(.ant-form-item-label) {\n                line-height: 1em;\n                margin-bottom: 0.5em;\n              }\n              .form :global(.ant-form-item) {\n                margin: 0;\n              }\n              .form :global(.ant-input) {\n                appearance: none;\n                height: auto;\n                font-size: 1.2em;\n                padding: 0.5em 0.6em;\n              }\n              .form :global(.ant-btn-primary) {\n                height: auto;\n                font-size: 1.2em;\n                padding: 0.5em 3em;\n                background: ${theme.color.brand.primary};\n                border: 1px solid ${theme.color.brand.primary};\n              }\n              .form :global(.ant-form-explain) {\n                margin-top: 0.2em;\n              }\n\n              @from-width desktop {\n                .form :global(input) {\n                  max-width: 50%;\n                }\n              }\n            `}</style>\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    </React.Fragment>\n  );\n};\n\nContact.propTypes = {\n  form: PropTypes.object\n};\n\nconst ContactForm = Form.create({})(Contact);\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Contact from \"../components/Contact\";\nimport Headline from \"../components/Article/Headline\";\nimport Seo from \"../components/Seo\";\n\nconst ContactPage = props => {\n  const {\n    data: {\n      site: {\n        siteMetadata: { facebook }\n      }\n    }\n  } = props;\n\n  return (\n    <React.Fragment>\n      <ThemeContext.Consumer>\n        {theme => (\n          <Article theme={theme}>\n            <header>\n              <Headline title=\"Contact\" theme={theme} />\n            </header>\n            <Contact theme={theme} />\n          </Article>\n        )}\n      </ThemeContext.Consumer>\n\n      <Seo facebook={facebook} />\n    </React.Fragment>\n  );\n};\n\nContactPage.propTypes = {\n  data: PropTypes.object.isRequired\n};\n\nexport default ContactPage;\n\n//eslint-disable-next-line no-undef\nexport const query = graphql`\n  query ContactQuery {\n    site {\n      siteMetadata {\n        facebook {\n          appId\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../content/meta/config\";\n\nconst Seo = props => {\n  const { data, facebook } = props;\n  const postTitle = ((data || {}).frontmatter || {}).title;\n  const postDescription = ((data || {}).frontmatter || {}).description;\n  const postCover = ((data || {}).frontmatter || {}).cover;\n  const postSlug = ((data || {}).fields || {}).slug;\n\n  const title = postTitle ? `${postTitle} - ${config.shortSiteTitle}` : config.siteTitle;\n  const description = postDescription ? postDescription : config.siteDescription;\n  const image = postCover ? postCover : config.siteImage;\n  const url = config.siteUrl + config.pathPrefix + postSlug;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: config.siteLanguage,\n        prefix: \"og: http://ogp.me/ns#\"\n      }}\n    >\n      {/* General tags */}\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n      {/* OpenGraph tags */}\n      <meta property=\"og:url\" content={url} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"fb:app_id\" content={facebook.appId} />\n      {/* Twitter Card tags */}\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={config.authorTwitterAccount ? config.authorTwitterAccount : \"\"}\n      />\n    </Helmet>\n  );\n};\n\nSeo.propTypes = {\n  data: PropTypes.object,\n  facebook: PropTypes.object.isRequired\n};\n\nexport default Seo;\n","export { default } from \"./Seo\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const { title, children, theme } = props;\n\n  return (\n    <React.Fragment>\n      {title ? <h1>{title}</h1> : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding: ${theme.space.inset.default};\n          margin: 0 auto;\n        }\n        @from-width tablet {\n          .article {\n            padding: ${`calc(${theme.space.default}) calc(${theme.space.default} * 2)`};\n            max-width: ${theme.text.maxWidth.tablet};\n          }\n        }\n        @from-width desktop {\n          .article {\n            padding: ${`calc(${theme.space.default} * 2 + 90px) 0 calc(${\n              theme.space.default\n            } * 2)`};\n            max-width: ${theme.text.maxWidth.desktop};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","export { default } from \"./Article\";\n"],"sourceRoot":""}